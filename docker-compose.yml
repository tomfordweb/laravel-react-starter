version: "3.8"

services:
  app-proxy:
    image: nginx:alpine
    ports:
      - 80:80
    volumes:
      - ./nginx/primary/conf.d/:/etc/nginx/conf.d/
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
      - backend-proxy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    entrypoint: npm start
    volumes:
      - ./frontend:/app
    ports:
      - 3000:3000
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    tty: true
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${MYSQL_DATABASE?Not set}
      DB_USERNAME: root
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD?Not set}
      APP_NAME: Laravel
      APP_ENV: local
      APP_DEBUG: ${APP_DEBUG?APP_DEBUG not set}
      APP_URL: ${APP_URL?Not set}
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      BROADCAST_DRIVER: log
      CACHE_DRIVER: file
      FILESYSTEM_DRIVER: local
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
      SESSION_LIFETIME: 120
      MEMCACHED_HOST: 127.0.0.1
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_ENCRYPTION: null
      MAIL_FROM_ADDRESS: null
      MAIL_FROM_NAME: APP_NAME}"
      AWS_ACCESS_KEY_ID: 
      AWS_SECRET_ACCESS_KEY: 
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET: 
      PUSHER_APP_ID: 
      PUSHER_APP_KEY: 
      PUSHER_APP_SECRET: 
      PUSHER_APP_CLUSTER: mt1
      MIX_PUSHER_APP_KEY: ${PUSHER_APP_KEY}
      MIX_PUSHER_APP_CLUSTER: ${PUSHER_APP_CLUSTER}
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  backend-proxy:
    image: nginx:alpine
    container_name: webserver
    volumes:
      - ./backend:/var/www
      - ./nginx/backend/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE?Not set}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD?Not set}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
